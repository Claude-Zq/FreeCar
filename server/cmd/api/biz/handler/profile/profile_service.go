// Code generated by hertz generator.

package profile

import (
	"context"

	profile "github.com/CyanAsterisk/FreeCar/server/cmd/api/biz/model/profile"
	"github.com/cloudwego/hertz/pkg/app"
)

// GetProfile .
// @router /v1/profile [GET]
func GetProfile(ctx context.Context, c *app.RequestContext) {
	var err error
	var req profile.GetProfileRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(profile.Profile)

	c.JSON(200, resp)
}

// SubmitProfile .
// @router /v1/profile [POST]
func SubmitProfile(ctx context.Context, c *app.RequestContext) {
	var err error
	var req profile.SubmitProfileRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(profile.Profile)

	c.JSON(200, resp)
}

// ClearProfile .
// @router /v1/profile [DELETE]
func ClearProfile(ctx context.Context, c *app.RequestContext) {
	var err error
	var req profile.ClearProfileRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(profile.Profile)

	c.JSON(200, resp)
}

// GetProfilePhoto .
// @router /v1/profile/photo [GET]
func GetProfilePhoto(ctx context.Context, c *app.RequestContext) {
	var err error
	var req profile.GetProfilePhotoRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(profile.GetProfilePhotoResponse)

	c.JSON(200, resp)
}

// CreateProfilePhoto .
// @router /v1/profile/photo [POST]
func CreateProfilePhoto(ctx context.Context, c *app.RequestContext) {
	var err error
	var req profile.CreateProfilePhotoRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(profile.CreateProfilePhotoResponse)

	c.JSON(200, resp)
}

// CompleteProfilePhoto .
// @router /v1/profile/photo/complete [POST]
func CompleteProfilePhoto(ctx context.Context, c *app.RequestContext) {
	var err error
	var req profile.CompleteProfilePhotoRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(profile.Identity)

	c.JSON(200, resp)
}

// ClearProfilePhoto .
// @router /v1/profile/photo [DELETE]
func ClearProfilePhoto(ctx context.Context, c *app.RequestContext) {
	var err error
	var req profile.ClearProfilePhotoRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(profile.ClearProfilePhotoResponse)

	c.JSON(200, resp)
}
